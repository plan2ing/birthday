using Microsoft.EntityFrameworkCore.Metadata.Internal;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace CodeGenerator
{
    public partial class CodeCreate : CodeBaseClass
    {
        public List<string> CreateControllerForm(CodeGeneratorModel model)
        {
            List<string> lines = new List<string>();
            string str_base = model.BaseController ? "BaseController" : "Controller";
            CreateControllerHeader(ref lines, model);
            string lineSpace = "        ";
            CreateActionSummary(ref lines, lineSpace, "資料初始化事件", model);
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Get", "User", model);
            lines.Add(GetLineValue(lineSpace, "public IActionResult Init()"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, "    SessionService.SetPrgInit();"));
            lines.Add(GetLineValue(lineSpace, "    return RedirectToAction(\"Index\", ActionService.Controller, new { area = ActionService.Area });"));
            lines.Add(GetLineValue(lineSpace, "}"));
            lines.Add(GetLineValue(""));
            CreateActionSummary(ref lines, lineSpace, "資料列表", model);
            lines.Add(GetLineValue(lineSpace, "/// <param name=\"id\">目前頁數</param>"));
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Get", "User", model);
            lines.Add(GetLineValue(lineSpace, "public IActionResult Index(int id = 1)"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, $"    using var datas = new z_repo{model.ModelClassName}(SessionService.SortColumn, SessionService.SortDirection);"));
            lines.Add(GetLineValue(lineSpace, "    var model = datas.GetDataList(SessionService.SearchText)"));
            lines.Add(GetLineValue(lineSpace, "        .ToPagedList(id, SessionService.PageSize);"));
            lines.Add(GetLineValue(lineSpace, "    SessionService.SetPageInfo(id, model.PageCount);"));
            lines.Add(GetLineValue(lineSpace, "    SessionService.SetActionInfo(enAction.Index, enCardSize.Max, id, \"\");"));
            lines.Add(GetLineValue(lineSpace, "    return View(model);"));
            lines.Add(GetLineValue(lineSpace, "}"));
            lines.Add(GetLineValue(""));
            CreateActionSummary(ref lines, lineSpace, "新增/修改", model);
            lines.Add(GetLineValue(lineSpace, "/// <param name=\"id\">新增/修改 Key 值</param>"));
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Get", "User", model);
            lines.Add(GetLineValue(lineSpace, "public IActionResult CreateEdit(int id = 0)"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, "    SessionService.SetActionInfo(enAction.CreateEdit, enCardSize.Medium);"));
            lines.Add(GetLineValue(lineSpace, $"    using var datas = new z_repo{model.ModelClassName}();"));
            lines.Add(GetLineValue(lineSpace, "    var model = datas.GetData(id);"));
            lines.Add(GetLineValue(lineSpace, "    if (model == null) return RedirectToAction(\"Index\", ActionService.Controller, new { area = ActionService.Area });"));
            lines.Add(GetLineValue(lineSpace, "    return View(model);"));
            lines.Add(GetLineValue(lineSpace, "}"));
            lines.Add(GetLineValue(""));
            CreateActionSummary(ref lines, lineSpace, "新增/修改", model);
            lines.Add(GetLineValue(lineSpace, "/// <param name=\"model\">新增/修改資料</param>"));
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Post", "User", model);
            lines.Add(GetLineValue(lineSpace, $"public IActionResult CreateEdit({model.ModelClassName} model)"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, "    if (!ModelState.IsValid) return View(model);"));
            lines.Add(GetLineValue(lineSpace, $"    using var datas = new z_repo{model.ModelClassName}();"));
            lines.Add(GetLineValue(lineSpace, "    datas.CreateEdit(model);"));
            lines.Add(GetLineValue(lineSpace, "    return RedirectToAction(\"Index\", ActionService.Controller, new { area = ActionService.Area });"));
            lines.Add(GetLineValue(lineSpace, "}"));
            lines.Add(GetLineValue(""));
            CreateActionSummary(ref lines, lineSpace, "刪除", model);
            lines.Add(GetLineValue(lineSpace, "/// <param name=\"id\">記錄 ID</param>"));
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Get", "User", model);
            lines.Add(GetLineValue(lineSpace, "public IActionResult Delete(int id = 0)"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, $"    using var datas = new z_repo{model.ModelClassName}();"));
            lines.Add(GetLineValue(lineSpace, "    datas.Delete(id);"));
            lines.Add(GetLineValue(lineSpace, "    return RedirectToAction(\"Index\", ActionService.Controller, new { area = ActionService.Area });"));
            lines.Add(GetLineValue(lineSpace, "}"));
            lines.Add(GetLineValue(""));
            CreateActionSummary(ref lines, lineSpace, "刪除", model);
            lines.Add(GetLineValue(lineSpace, "/// <param name=\"id\">記錄 ID</param>"));
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Post", "User", model);
            lines.Add(GetLineValue(lineSpace, "public JsonResult DeleteRow(int id = 0)"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, $"    using var datas = new z_repo{model.ModelClassName}();"));
            lines.Add(GetLineValue(lineSpace, "    datas.Delete(id);"));
            lines.Add(GetLineValue(lineSpace, "    dmJsonMessage result = new dmJsonMessage() { Mode = true, Message = \"資料已刪除!!\" };"));
            lines.Add(GetLineValue(lineSpace, "    return Json(result);"));
            lines.Add(GetLineValue(lineSpace, "}"));
            lines.Add(GetLineValue(""));
            CreateActionSummary(ref lines, lineSpace, "查詢", model);
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Post", "User", model);
            lines.Add(GetLineValue(lineSpace, "public IActionResult Search()"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, "    object obj_text = Request.Form[\"SearchText\"];"));
            lines.Add(GetLineValue(lineSpace, "    string str_text = (obj_text == null) ? string.Empty : obj_text.ToString();"));
            lines.Add(GetLineValue(lineSpace, "    SessionService.SearchText = str_text;"));
            lines.Add(GetLineValue(lineSpace, "    return RedirectToAction(\"Index\", ActionService.Controller, new { area = ActionService.Area });"));
            lines.Add(GetLineValue(lineSpace, "}"));
            lines.Add(GetLineValue(""));
            CreateActionSummary(ref lines, lineSpace, "欄位排序", model);
            lines.Add(GetLineValue(lineSpace, "/// <param name=\"id\">欄位名稱</param>"));
            lines.Add(GetLineValue(lineSpace, "/// <returns></returns>"));
            CreateActionHeader(ref lines, lineSpace, "Get", "User", model);
            lines.Add(GetLineValue(lineSpace, "public IActionResult Sort(string id)"));
            lines.Add(GetLineValue(lineSpace, "{"));
            lines.Add(GetLineValue(lineSpace, "    if (SessionService.SortColumn == id)"));
            lines.Add(GetLineValue(lineSpace, "    {"));
            lines.Add(GetLineValue(lineSpace, "        SessionService.SortDirection = (SessionService.SortDirection == \"asc\") ? \"desc\" : \"asc\";"));
            lines.Add(GetLineValue(lineSpace, "    }"));
            lines.Add(GetLineValue(lineSpace, "    else"));
            lines.Add(GetLineValue(lineSpace, "    {"));
            lines.Add(GetLineValue(lineSpace, "        SessionService.SortColumn = id;"));
            lines.Add(GetLineValue(lineSpace, "        SessionService.SortDirection = \"asc\";"));
            lines.Add(GetLineValue(lineSpace, "    }"));
            lines.Add(GetLineValue(lineSpace, "    return RedirectToAction(\"Index\", ActionService.Controller, new { area = ActionService.Area });"));
            lines.Add(GetLineValue(lineSpace, "}"));
            CreateControllerFooter(ref lines, model);
            return lines;
        }
    }
}